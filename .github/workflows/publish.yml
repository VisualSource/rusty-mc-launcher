name: "Publish"

on:
  push:
    tags:
      - "v*.*.*"
jobs:
  publish-tauri:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 21
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 10
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install frontend dependencies
        run: pnpm install
      - name: Cache rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri
            launcher-lib
      - uses: tauri-apps/tauri-action@dev
        env:
          MCL_LOG: "INFO"
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

          VITE_CLIENT_ID: ${{ secrets.PUBLIC_VITE_CLIENT_ID  }}
          VITE_AUTHORITY: ${{ secrets.PUBLIC_VITE_AUTHORITY  }}

          VITE_MODRINTH_CLIENT_SECRET: ${{ secrets.PUBLIC_VITE_MODRINTH_CLIENT_SECRET }}
          VITE_MODRINTH_SCOPES: ${{ vars.VITE_MODRINTH_SCOPES }}
          VITE_MODRINTH_CLIENT_ID: ${{ vars.VITE_MODRINTH_CLIENT_ID }}
        
          VITE_REDIRECT_URI: ${{ secrets.PUBLIC_VITE_AUTHORITY  }}
          VITE_GITHUB: ${{ secrets.PUBLIC_VITE_GITHUB }}
          VITE_GITHUB_API_VERSION: ${{ vars.VITE_GITHUB_API_VERSION }}
          VITE_REACT_DEVTOOLS: ${{ vars.VITE_REACT_DEVTOOLS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          includeUpdaterJson: true
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__"
          releaseBody: "View patch on Github or View patch notes in app"
          releaseDraft: true
          prerelease: false
