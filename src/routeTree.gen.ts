/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedCreateProfileImport } from './routes/_authenticated/create-profile'
import { Route as AuthenticatedLayoutImport } from './routes/_authenticated/_layout'
import { Route as AuthenticatedLayoutCollectionsImport } from './routes/_authenticated/_layout/collections'
import { Route as AuthenticatedWorkshopSearchRouteImport } from './routes/_authenticated/workshop/search/route'
import { Route as AuthenticatedWorkshopProjectIdRouteImport } from './routes/_authenticated/workshop/project.$id/route'
import { Route as AuthenticatedLayoutProfileProfileIdImport } from './routes/_authenticated/_layout/profile/_profile.$id'
import { Route as AuthenticatedLayoutProfileProfileIdIndexImport } from './routes/_authenticated/_layout/profile/_profile.$id/index'
import { Route as AuthenticatedLayoutProfileProfileIdScreenshotsImport } from './routes/_authenticated/_layout/profile/_profile.$id/screenshots'
import { Route as AuthenticatedLayoutProfileProfileIdEditImport } from './routes/_authenticated/_layout/profile/_profile.$id/edit'

// Create Virtual Routes

const AuthenticatedSettingsLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedDownloadsLazyImport = createFileRoute(
  '/_authenticated/downloads',
)()
const AuthenticatedLayoutIndexLazyImport = createFileRoute(
  '/_authenticated/_layout/',
)()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsLazyRoute = AuthenticatedSettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/settings.lazy').then((d) => d.Route),
)

const AuthenticatedDownloadsLazyRoute = AuthenticatedDownloadsLazyImport.update(
  {
    path: '/downloads',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/downloads.lazy').then((d) => d.Route),
)

const AuthenticatedCreateProfileRoute = AuthenticatedCreateProfileImport.update(
  {
    path: '/create-profile',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedLayoutRoute = AuthenticatedLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLayoutIndexLazyRoute =
  AuthenticatedLayoutIndexLazyImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/_layout/index.lazy').then((d) => d.Route),
  )

const AuthenticatedLayoutCollectionsRoute =
  AuthenticatedLayoutCollectionsImport.update({
    path: '/collections',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

const AuthenticatedWorkshopSearchRouteRoute =
  AuthenticatedWorkshopSearchRouteImport.update({
    path: '/workshop/search',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/workshop/search/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedWorkshopProjectIdRouteRoute =
  AuthenticatedWorkshopProjectIdRouteImport.update({
    path: '/workshop/project/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/workshop/project.$id/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedLayoutProfileProfileIdRoute =
  AuthenticatedLayoutProfileProfileIdImport.update({
    path: '/profile/$id',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

const AuthenticatedLayoutProfileProfileIdIndexRoute =
  AuthenticatedLayoutProfileProfileIdIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedLayoutProfileProfileIdRoute,
  } as any)

const AuthenticatedLayoutProfileProfileIdScreenshotsRoute =
  AuthenticatedLayoutProfileProfileIdScreenshotsImport.update({
    path: '/screenshots',
    getParentRoute: () => AuthenticatedLayoutProfileProfileIdRoute,
  } as any)

const AuthenticatedLayoutProfileProfileIdEditRoute =
  AuthenticatedLayoutProfileProfileIdEditImport.update({
    path: '/edit',
    getParentRoute: () => AuthenticatedLayoutProfileProfileIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_layout': {
      id: '/_authenticated/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedLayoutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/create-profile': {
      id: '/_authenticated/create-profile'
      path: '/create-profile'
      fullPath: '/create-profile'
      preLoaderRoute: typeof AuthenticatedCreateProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/downloads': {
      id: '/_authenticated/downloads'
      path: '/downloads'
      fullPath: '/downloads'
      preLoaderRoute: typeof AuthenticatedDownloadsLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/workshop/search': {
      id: '/_authenticated/workshop/search'
      path: '/workshop/search'
      fullPath: '/workshop/search'
      preLoaderRoute: typeof AuthenticatedWorkshopSearchRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_layout/collections': {
      id: '/_authenticated/_layout/collections'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof AuthenticatedLayoutCollectionsImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/': {
      id: '/_authenticated/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedLayoutIndexLazyImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/workshop/project/$id': {
      id: '/_authenticated/workshop/project/$id'
      path: '/workshop/project/$id'
      fullPath: '/workshop/project/$id'
      preLoaderRoute: typeof AuthenticatedWorkshopProjectIdRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_layout/profile/_profile/$id': {
      id: '/_authenticated/_layout/profile/_profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof AuthenticatedLayoutProfileProfileIdImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/profile/_profile/$id/edit': {
      id: '/_authenticated/_layout/profile/_profile/$id/edit'
      path: '/edit'
      fullPath: '/profile/$id/edit'
      preLoaderRoute: typeof AuthenticatedLayoutProfileProfileIdEditImport
      parentRoute: typeof AuthenticatedLayoutProfileProfileIdImport
    }
    '/_authenticated/_layout/profile/_profile/$id/screenshots': {
      id: '/_authenticated/_layout/profile/_profile/$id/screenshots'
      path: '/screenshots'
      fullPath: '/profile/$id/screenshots'
      preLoaderRoute: typeof AuthenticatedLayoutProfileProfileIdScreenshotsImport
      parentRoute: typeof AuthenticatedLayoutProfileProfileIdImport
    }
    '/_authenticated/_layout/profile/_profile/$id/': {
      id: '/_authenticated/_layout/profile/_profile/$id/'
      path: '/'
      fullPath: '/profile/$id/'
      preLoaderRoute: typeof AuthenticatedLayoutProfileProfileIdIndexImport
      parentRoute: typeof AuthenticatedLayoutProfileProfileIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedLayoutRoute: AuthenticatedLayoutRoute.addChildren({
      AuthenticatedLayoutCollectionsRoute,
      AuthenticatedLayoutIndexLazyRoute,
      AuthenticatedLayoutProfileProfileIdRoute:
        AuthenticatedLayoutProfileProfileIdRoute.addChildren({
          AuthenticatedLayoutProfileProfileIdEditRoute,
          AuthenticatedLayoutProfileProfileIdScreenshotsRoute,
          AuthenticatedLayoutProfileProfileIdIndexRoute,
        }),
    }),
    AuthenticatedCreateProfileRoute,
    AuthenticatedDownloadsLazyRoute,
    AuthenticatedSettingsLazyRoute,
    AuthenticatedWorkshopSearchRouteRoute,
    AuthenticatedWorkshopProjectIdRouteRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_layout",
        "/_authenticated/create-profile",
        "/_authenticated/downloads",
        "/_authenticated/settings",
        "/_authenticated/workshop/search",
        "/_authenticated/workshop/project/$id"
      ]
    },
    "/_authenticated/_layout": {
      "filePath": "_authenticated/_layout.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_layout/collections",
        "/_authenticated/_layout/",
        "/_authenticated/_layout/profile/_profile/$id"
      ]
    },
    "/_authenticated/create-profile": {
      "filePath": "_authenticated/create-profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/downloads": {
      "filePath": "_authenticated/downloads.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/workshop/search": {
      "filePath": "_authenticated/workshop/search/route.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_layout/collections": {
      "filePath": "_authenticated/_layout/collections.tsx",
      "parent": "/_authenticated/_layout"
    },
    "/_authenticated/_layout/": {
      "filePath": "_authenticated/_layout/index.lazy.tsx",
      "parent": "/_authenticated/_layout"
    },
    "/_authenticated/workshop/project/$id": {
      "filePath": "_authenticated/workshop/project.$id/route.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_layout/profile/_profile/$id": {
      "filePath": "_authenticated/_layout/profile/_profile.$id.tsx",
      "parent": "/_authenticated/_layout",
      "children": [
        "/_authenticated/_layout/profile/_profile/$id/edit",
        "/_authenticated/_layout/profile/_profile/$id/screenshots",
        "/_authenticated/_layout/profile/_profile/$id/"
      ]
    },
    "/_authenticated/_layout/profile/_profile/$id/edit": {
      "filePath": "_authenticated/_layout/profile/_profile.$id/edit.tsx",
      "parent": "/_authenticated/_layout/profile/_profile/$id"
    },
    "/_authenticated/_layout/profile/_profile/$id/screenshots": {
      "filePath": "_authenticated/_layout/profile/_profile.$id/screenshots.tsx",
      "parent": "/_authenticated/_layout/profile/_profile/$id"
    },
    "/_authenticated/_layout/profile/_profile/$id/": {
      "filePath": "_authenticated/_layout/profile/_profile.$id/index.tsx",
      "parent": "/_authenticated/_layout/profile/_profile/$id"
    }
  }
}
ROUTE_MANIFEST_END */
